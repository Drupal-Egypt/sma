// Enable cross site scripting
jQuery.support.cors = true;

// Disable ajax cache
jQuery.ajaxSetup({ cache: false });

// Add REST service URL
var appConfig = {
  baseURL: 'http://localhost/drupal-rest/',
  addURL: '',
  token: ''
}

// Get token and save it
$.get(appConfig.baseURL + 'rest/session/token')
.done(function(data) {
  appConfig.token = data;
});

// Override Backbone.sync to include a token and set headers
var sync = Backbone.sync;
Backbone.sync = function(method, model, options) {
  options.beforeSend = function (xhr) {
    xhr.setRequestHeader('Content-type', 'application/hal+json');
    xhr.setRequestHeader('Accept', 'application/hal+json');
    xhr.setRequestHeader('X-CSRF-Token', appConfig.token);
  };
  sync(method, model, options);
};


// Transform JSON generated by the Drupal
var mixin = {
  parse: function(resp, options) {
    if (!_.isNull(resp)) {
      var id = this.idAttribute;

      _.each(resp, function(value, key) {
        if (_.isString(key) && key.charAt(0) != '_') {
          if (_.isArray(value)) {
            resp[key == 'nid' ? id : key] = value[0].value;
          }
        }
      });

      delete resp.nid;
    }
    return resp;
  },

  // Convert regular JSON into MongoDB extended one.
  toExtendedJSON: function() {
    var attrs = this.attributes;

    var id = this.idAttribute;
    _.each(attrs, function(value, key) {
      if (_.isString(key) && key.charAt(0) != '_') {
        attrs[key == id ? 'nid' : key] = [{ 'value': value }];
      }
    });

    return attrs;
  },

  // Substute toJSON method when performing synchronization.
  sync: function() {
    var toJSON = this.toJSON;
    this.toJSON = this.toExtendedJSON;

    var ret = Backbone.sync.apply(this, arguments);

    this.toJSON = toJSON;

    return ret;
  }
}

// Mix our mixin
_.extend(Backbone.Model.prototype, mixin);